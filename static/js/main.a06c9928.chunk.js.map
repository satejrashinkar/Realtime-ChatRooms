{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","seed","setSeed","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toLocaleDateString","hour","minute","hour12","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6ZAYMA,EADeC,IAASC,cATP,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAIYC,YACjBC,EAAOT,IAASS,OAChBC,EAAW,IAAIV,IAASS,KAAKE,mBAGpBZ,I,eCoCAa,MA/Cf,YAA+C,IAAD,EAAvBC,EAAuB,EAAvBA,GAAGC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAE5B,EAA+BC,mBAAU,IAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,WACFN,GACAd,EAAGqB,WAAW,SAASC,IAAIR,GAAIO,WAAW,YAAYE,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GACzFN,EAAYM,EAASC,KAAKC,KAAI,SAACL,GAAD,OAC1BA,EAAIM,gBAGlB,CAACd,IAEH,MAAyBG,mBAAS,IAAlC,mBAAOY,EAAP,KAAaC,EAAb,KAgBA,OAfAV,qBAAU,WACNU,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,aACzB,IAaKjB,EAYJ,qBAAKkB,QAvBU,WACf,IAAMC,EAAWC,OAAQ,+BAErBD,GACAnC,EAAGqB,WAAW,SAASgB,IAAI,CACvBtB,KAAMoB,KAmBVG,UAAU,cADd,SAEQ,gDAbR,cAAC,IAAD,CAAMC,GAAE,iBAAczB,GAAtB,SACA,sBAAKwB,UAAU,cAAf,UACI,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA6CZ,EAA7C,UACX,sBAAKS,UAAU,oBAAf,UACI,6BAAKvB,IACL,sCAAIG,EAAS,UAAb,aAAI,EAAawB,mBCtCpBC,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,cAACL,EAAaM,SAAd,CAAuBC,MAASC,qBAAWL,EAAQC,GAAnD,SACKC,KAIII,EAAgB,kBAAMC,qBAAWV,ICoD/BW,MAnDf,WAEI,MAA0BrC,mBAAS,IAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EAA0BJ,IAA1B,mBAAQK,EAAR,KAAQA,KAgBR,OAhBA,KAEArC,qBAAU,WACN,IAAMsC,EAAe1D,EAAGqB,WAAW,SAASG,YAAW,SAAAC,GAAQ,OAC1D+B,EAAS/B,EAASC,KAAKC,KAAI,SAAAL,GAAG,MAC1B,CACGR,GAAIQ,EAAIR,GACRc,KAAMN,EAAIM,eAItB,OAAO,WACH8B,OAEL,IAGC,sBAAKpB,UAAY,UAAjB,UACI,sBAAKA,UAAU,kBAAf,UACK,cAACE,EAAA,EAAD,CAAQC,IAAG,OAAIgB,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,WACtB,sBAAKrB,UAAU,uBAAf,UACI,cAACsB,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,IAAD,YAIZ,qBAAKtB,UAAU,kBAAf,SACA,sBAAKA,UAAU,2BAAf,UACO,cAACuB,EAAA,EAAD,IACC,uBAAOC,YAAY,SAASC,KAAK,cAGzC,sBAAKzB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAatB,YAAU,IACtBuC,EAAM5B,KAAI,SAAAqC,GAAI,OACX,cAAC,EAAD,CAA2BlD,GAAKkD,EAAKlD,GAAIC,KAAQiD,EAAKpC,KAAKb,MAAzCiD,EAAKlD,c,oECsD5BmD,MAjGf,WAAiB,IAAD,IACd,EAAwBhD,mBAAS,IAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAA0Bb,mBAAS,IAAnC,mBAAOiD,EAAP,KAAcC,EAAd,KACQC,EAAWC,cAAXD,OACR,EAAgCnD,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBmC,EAAjB,KACA,EAAgCrD,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA2BiC,IAA3B,mBAAQK,EAAR,KAAQA,KAgCR,OAhCA,KAEArC,qBAAU,WACJgD,IACFpE,EAAGqB,WAAW,SACXC,IAAI8C,GACJ5C,YAAW,SAACC,GAAD,OAAc6C,EAAY7C,EAASG,OAAOb,SACxDf,EAAGqB,WAAW,SACXC,IAAI8C,GACJ/C,WAAW,YACXE,QAAQ,YAAa,OACrBC,YAAW,SAACC,GAAD,OACVN,EAAYM,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,iBAGhD,CAACwC,IAEJhD,qBAAU,WACRU,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,aACvB,CAACmC,IAcF,sBAAK9B,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CZ,EAA5C,UACX,sBAAKS,UAAU,mBAAf,UACE,6BAAKH,IACL,0CAAa,IACZ,IAAIoC,KAAJ,UACOrD,EAASA,EAASsD,OAAO,UADhC,iBACO,EACAC,iBAFP,aACO,EACWC,UACbC,mBAAoB,QAAS,CAACC,KAAM,UAAUC,OAAO,UAAUC,OAAO,eAG9E,sBAAKxC,UAAU,kBAAf,UACE,cAACsB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACD,EAAA,EAAD,UACE,cAACmB,EAAA,EAAD,MAEF,cAACnB,EAAA,EAAD,UACE,cAAC,IAAD,YAIN,qBAAKtB,UAAU,aAAf,SACGpB,EAASS,KAAI,SAACe,GAAD,aACZ,oBAAGJ,UAAS,wBAAmBI,EAAQ3B,OAAS0C,EAAKuB,aAAe,kBAApE,UACE,sBAAM1C,UAAU,aAAhB,SAA8BI,EAAQ3B,OACrC2B,EAAQA,QACT,sBAAMJ,UAAU,kBAAhB,mBACCI,EAAQ+B,iBADT,aACC,EAAmBC,SAASC,mBAAoB,QAAS,CAACC,KAAM,UAAUC,OAAO,UAAUC,OAAO,mBAKzG,sBAAKxC,UAAU,eAAf,UACE,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,iCACE,uBACEV,MAAOgB,EACPe,SAAU,SAACC,GAAD,OAAOf,EAASe,EAAEC,OAAOjC,QACnCY,YAAY,iBACZC,KAAK,SAEP,wBAAQ7B,QA1DI,SAACgD,GACnBA,EAAEE,iBACFC,QAAQC,IAAI,cAAepB,GAC3BlE,EAAGqB,WAAW,SAASC,IAAI8C,GAAQ/C,WAAW,YAAYgB,IAAI,CAC1DK,QAASwB,EACTnD,KAAM0C,EAAKuB,YACXP,UAAWxE,IAASQ,UAAU8E,WAAWC,oBAE7CrB,EAAS,KAkD2BJ,KAAK,SAAnC,qBAIF,cAACH,EAAA,EAAD,UACE,cAAC,IAAD,a,iCClGG6B,EACC,WAgBC3C,EAbC,SAAC4C,EAAOC,GAEpB,OADAN,QAAQC,IAAIK,GACLA,EAAO5B,MACV,KAAK0B,EACD,kCACOC,GADP,IAEIjC,KAAMkC,EAAOlC,OAEjB,QACI,OAAOiC,ICoBRE,MA9Bf,WAEG,MAAuBxC,IAAvB,yCAAWyC,EAAX,KAYC,OACI,qBAAKvD,UAAW,QAAhB,SACI,sBAAKA,UAAU,mBAAf,UACC,qBAAKG,IAAK,gGACVqD,IAAI,KACL,qBAAKxD,UAAU,cAAf,SACI,uDAEJ,cAACyD,EAAA,EAAD,CAAQ7D,QAlBD,WACXxB,EAAKsF,gBAAgBrF,GACpBsF,MAAK,SAACC,GACHL,EAAS,CACL9B,KAAM0B,EACNhC,KAAMyC,EAAOzC,UAGpB0C,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAM1D,aAU1B,uCCMG4D,MA3Bf,WAEE,MAA6BlD,IAA7B,mBAASK,EAAT,KAASA,KAET,OAFA,KAGE,qBAAKnB,UAAU,MAAf,SACImB,EAGA,qBAAKnB,UAAU,YAAf,SACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiE,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAVN,cAAC,EAAD,OCHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAenE,aJZS,CACxBU,KAAK,MIWsCX,QAASA,EAApD,SACE,cAAC,EAAD,QAGJqE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a06c9928.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAQs9w10R0BPnBG9Rjw0dD-e5fYX1CSUvA\",\r\n    authDomain: \"whatsapp-clone-b655b.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-b655b\",\r\n    storageBucket: \"whatsapp-clone-b655b.appspot.com\",\r\n    messagingSenderId: \"851981032364\",\r\n    appId: \"1:851981032364:web:c45c46d6a3ee550b79b809\"\r\n  };\r\n\r\nconst firebaseApp =  firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","import React, {useEffect , useState} from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport db from './firebase';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id,name, addNewChat }) {\r\n   \r\n    const [messages,setMessages] = useState (\"\");\r\n    useEffect(() => {\r\n        if (id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) =>\r\n                    doc.data()))\r\n            })\r\n        }\r\n    },[id]);\r\n    \r\n    const [seed, setSeed] =  useState('');\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000)); \r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt (\"Please enter the room name \");\r\n        \r\n        if (roomName) {\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to = {`/rooms/${id}`}>\r\n        <div className='sidebarChat'>\r\n            <Avatar src ={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n        \r\n    ) : (\r\n        <div onClick = {createChat}\r\n            className=\"sidebarChat\">\r\n                <h2>Add new chat</h2>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React , {createContext, useContext , useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value = {useReducer(reducer,initialState)}> \r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useEffect , useState} from 'react';\r\nimport './Sidebar.css'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { Avatar , IconButton } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    \r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n    \r\n    useEffect(() => {\r\n        const unsubscribe =  db.collection('rooms').onSnapshot(snapshot => (\r\n             setRooms(snapshot.docs.map(doc => \r\n                ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })\r\n             ))\r\n         ))\r\n        return ()=>{\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <div className = \"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                 <Avatar src = {user?.photoURL}/>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/> \r\n                    </IconButton> \r\n                    <IconButton>\r\n                        <ChatIcon/> \r\n                    </IconButton> \r\n                    <IconButton>\r\n                        <MoreVertIcon/> \r\n                    </IconButton>   \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n            <div className=\"sidebar__searchContainer\">\r\n                   <SearchOutlined />\r\n                    <input placeholder=\"Search\" type=\"text\"/>\r\n                </div>\r\n            </div> \r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id ={room.id} name = {room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{user}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"You typed :\", input);\r\n    db.collection('rooms').doc(roomId).collection('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>Last Seen{\" \"}\r\n          {new Date(\r\n                  messages[messages.length-1]?.\r\n                  timestamp?.toDate ()    \r\n              ).toLocaleDateString(('en-GB'),{hour: '2-digit',minute:'2-digit',hour12:'true'})}\r\n          </p>\r\n        </div>\r\n        <div className=\"chatheaderRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">\r\n            {message.timestamp?.toDate().toLocaleDateString(('en-GB'),{hour: '2-digit',minute:'2-digit',hour12:'true'})}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send\r\n          </button>\r\n        </form>\r\n        <IconButton>\r\n          <MicIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport \"./Login.css\";\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Login() {\r\n\r\n   const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            })\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    };\r\n    return (\r\n        <div className= \"login\">\r\n            <div className=\"login__container\">\r\n             <img src= \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/200px-WhatsApp.svg.png\"\r\n             alt=\"\"/>\r\n            <div className=\"login__test\">\r\n                <h1>Sign in to WhatsApp</h1>\r\n            </div>\r\n            <Button onClick={signIn}>\r\n                Sign In with Google\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react';\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  \n  const [{ user }, dispatch] = useStateValue();\n  \n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login/>\n      ): (\n        <div className=\"app__body\">\n        <Router>\n          <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Chat />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n      )}  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./reducer\";\nimport {initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\";\n \nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}